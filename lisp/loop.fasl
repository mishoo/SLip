CONST(l(s("LOOP",p("SL")),s("AS",p(0)),s("IN",p(0)),s("ON",p(0)),s("BY",p(0)),s("ACROSS",p(0)),s("NAMED",p(0)),s("THEN",p("%")),s("ELSE",p(8)),s("REPEAT",p(0)),s("WHEN",p(8)),s("UNLESS",p(8)),s("FOR",p(0)),s("DO",p(0)),s("COLLECT",p(0)),s("COLLECTING",p(0)),s("APPEND",p(8)),s("APPENDING",p(0)),s("NCONC",p(8)),s("NCONCING",p(0)),s("SUM",p(0)),s("SUMMING",p(0)),s("MAXIMIZE",p(0)),s("MAXIMIZING",p(0)),s("MINIMIZE",p(0)),s("MINIMIZING",p(0)),s("WITH",p(0)),s("AND",p(8)),s("INTO",p(0)),s("FINALLY",p(0)),s("COUNT",p(0)),s("COUNTING",p(0)),s("FROM",p(0)),s("UPFROM",p(0)),s("DOWNFROM",p(0)),s("BEING",p(0)),s("EACH",p(0)),s("THE",p(0)),s("OF",p(0)),s("USING",p(0)),s("HASH-KEY",p(0)),s("HASH-KEYS",p(8)),s("HASH-VALUE",p(0)),s("HASH-VALUES",p(8)),s("PRESENT-SYMBOL",p(0)),s("PRESENT-SYMBOLS",p(0)),s("SYMBOL",p(0)),s("SYMBOLS",p(0)),s("EXTERNAL-SYMBOL",p(0)),s("EXTERNAL-SYMBOLS",p(0)),s("WHILE",p(0)),s("UNTIL",p(0)),s("INITIALLY",p(0)),s("ALWAYS",p(0)),s("NEVER",p(0)),s("THEREIS",p(0)),s("TO",p(0)),s("DOWNTO",p(0)),s("UPTO",p(0)),s("BELOW",p(0)),s("ABOVE",p(0)))),CONST(p(0)),PRIM(s("%EXPORT",p(8)),2),POP()
,CONST(s("SL-LOOP",p("KEYWORD"))),CONST(l(s("SL",p(64)),s("%",p(64)))),NIL(),PRIM(s("MAKE-PACKAGE",p(8)),3),LET(1),UNFR(1,0)
,CONST(s("*CLAUSE-PARSERS*",p("SL-LOOP"))),PRIM(s("%SPECIAL!",p(8)),1),POP(),LIST(0),GSET(s(70)),POP()
,CONST(s("*LOOP-BODY*",p(69))),PRIM(s(71),1),POP(),NIL(),LIST(1),GSET(s(72)),POP()
,CONST(s("*LOOP-VARIABLES*",p(69))),PRIM(s(71),1),POP(),NIL(),LIST(1),GSET(s(73)),POP()
,CONST(s("*LOOP-START*",p(69))),PRIM(s(71),1),POP(),NIL(),LIST(1),GSET(s(74)),POP()
,CONST(s("*LOOP-ITERATE*",p(69))),PRIM(s(71),1),POP(),NIL(),LIST(1),GSET(s(75)),POP()
,CONST(s("*LOOP-FINISH*",p(69))),PRIM(s(71),1),POP(),NIL(),LIST(1),GSET(s(76)),POP()
,CONST(s("*LOOP-BLOCK-NAME*",p(69))),PRIM(s(71),1),POP(),NIL(),GSET(s(77)),POP()
,CONST(s("PARSE-CLAUSE",p(69))),FN([ARGS(1),LVAR(0,0),CAR(),LET(1),LVAR(0,0),PRIM(s("SYMBOLP",p(8)),1),TJUMP(13),SAVE(12),CONST("Expecting loop clause, got ~A"),LVAR(0,0),FGVAR(s("ERROR",p(8))),CALL(2),POP(),GVAR(s(70)),LVAR(0,0),PRIM(s("GETF",p(8)),2),LET(1),LVAR(0,0),TJUMP(25),SAVE(24),CONST("Unknown loop clause ~A"),LVAR(1,0),FGVAR(s(80)),CALL(2),POP(),LVAR(0,0),LVAR(2,0),CDR(),PRIM(s("APPLY",p(8)),2),RET()],s(78)),PRIM(s("SET-SYMBOL-FUNCTION!",p(8)),2),POP()
,CONST(s("%LIST-ADD",p(69))),FN([ARGS(2),LVAR(0,1),LIST(1),LET(1),LVAR(1,0),CAR(),FJUMP(13),LVAR(1,0),CDR(),LVAR(0,0),PRIM(s("RPLACD",p(8)),2),POP(),JUMP(17),LVAR(1,0),LVAR(0,0),PRIM(s("RPLACA",p(8)),2),POP(),LVAR(1,0),LVAR(0,0),PRIM(s(85),2),RET()],s(84)),PRIM(s(83),2),POP()
,CONST(s("%LIST-APPEND",p(69))),FN([ARGS(2),LVAR(0,0),CAR(),FJUMP(10),LVAR(0,0),CDR(),LVAR(0,1),PRIM(s(85),2),POP(),JUMP(14),LVAR(0,0),LVAR(0,1),PRIM(s(86),2),POP(),LVAR(0,0),SAVE(19),LVAR(0,1),FGVAR(s("LAST",p(8))),CALL(1),PRIM(s(85),2),RET()],s(87)),PRIM(s(83),2),POP()
,CONST(s("%REGISTER-PARSER",p(69))),FN([ARGS(2),LVAR(0,0),PRIM(s("CONSP",p(8)),1),FJUMP(16),SAVE(10),LVAR(0,0),CAR(),LVAR(0,1),FGVAR(s(89)),CALL(2),POP(),LVAR(0,0),CDR(),LVAR(0,1),FGVAR(s(89)),CALL(2),LVAR(0,0),PRIM(s(79),1),FJUMP(24),LVAR(0,0),PRIM(s("SYMBOL-NAME",p(8)),1),LVAR(0,1),FGVAR(s(89)),CALL(2),LVAR(0,0),PRIM(s("STRINGP",p(8)),1),FJUMP(44),LVAR(0,0),CONST(p(0)),PRIM(s("INTERN",p(8)),2),LVAR(0,0),CONST(p(64)),PRIM(s(93),2),LET(2),GVAR(s(70)),LVAR(0,0),LVAR(1,1),PRIM(s("%PUTF",p(8)),3),GSET(s(70)),LVAR(0,1),LVAR(1,1),PRIM(s(94),3),GSET(s(70)),RET(),NIL(),RET()],s(89)),PRIM(s(83),2),POP()
,CONST(s("DEFPARSER",p(69))),FN([ARG_(0),LVAR(0,0),FRAME(),VAR(),LVAR(0,0),FJUMP(16),LVAR(0,0),CAR(),LET(1),LVAR(1,0),CDR(),LSET(1,0),POP(),LVAR(0,0),UNFR(1,0),JUMP(20),SAVE(20),CONST(s(48)),FGVAR(s("%DBIND-ERROR-MISSING-ARG",p(0))),CALL(1),VAR(),LVAR(0,0),FJUMP(33),LVAR(0,0),CAR(),LET(1),LVAR(1,0),CDR(),LSET(1,0),POP(),LVAR(0,0),UNFR(1,0),JUMP(37),SAVE(37),CONST(s("ARGS",p(8))),FGVAR(s(96)),CALL(1),VAR(),LVAR(0,0),VAR(),CONST(s("LABELS",p(8))),CONST(s("PARSER",p(69))),LVAR(0,2),LVAR(0,3),LIST_(3),LIST(1),CONST(s(89)),CONST(s("QUOTE",p(8))),LVAR(0,1),LIST(2),CONST(s("FUNCTION",p(8))),CONST(s(99)),LIST(2),LIST(3),LIST(3),RET()],l(s(100),s(95))),PRIM(s("%MACRO!",p(8)),2),POP()
,CONST(s("DSETQ",p(69))),FN([ARGS(2),LVAR(0,0),FJUMP(67),LVAR(0,0),PRIM(s(79),1),FJUMP(27),LVAR(0,0),GVAR(s(73)),CAR(),PRIM(s("%MEMQ",p(8)),2),TJUMP(17),SAVE(16),GVAR(s(73)),LVAR(0,0),FGVAR(s(84)),CALL(2),POP(),LVAR(0,1),FJUMP(25),CONST(s("SETF",p(0))),LVAR(0,0),LVAR(0,1),LIST(3),LIST(1),RET(),NIL(),RET(),LVAR(0,0),PRIM(s(90),1),FJUMP(65),LVAR(0,1),FJUMP(53),CONST(s("LET",p(8))),CONST(s("%DATA",p(69))),LVAR(0,1),LIST(2),LIST(1),SAVE(43),LVAR(0,0),CAR(),CONST(l(s("CAR",p(8)),s(107))),FGVAR(s(103)),CALL(2),SAVE(49),LVAR(0,0),CDR(),CONST(l(s("CDR",p(8)),s(107))),FGVAR(s(103)),CALL(2),PRIM(s(18),2),LIST_(3),LIST(1),RET(),SAVE(59),LVAR(0,0),CAR(),NIL(),FGVAR(s(103)),CALL(2),POP(),LVAR(0,0),CDR(),NIL(),FGVAR(s(103)),CALL(2),NIL(),RET(),NIL(),RET()],s(103)),PRIM(s(83),2),POP()
,CONST(s("ISKW",p(69))),FN([ARGS(2),LVAR(0,1),LET(1),LVAR(0,0),FJUMP(15),LVAR(1,0),PRIM(s(79),1),LET(1),LVAR(0,0),FJUMP(12),LVAR(0,0),JUMP(13),NIL(),UNFR(1,0),JUMP(16),NIL(),UNFR(1,0),FJUMP(66),LVAR(0,1),PRIM(s("LISTP",p(8)),1),FJUMP(45),SAVE(27),LVAR(0,0),LVAR(0,1),CAR(),FGVAR(s(110)),CALL(2),LET(1),LVAR(0,0),FJUMP(32),LVAR(0,0),RET(),SAVE(38),LVAR(1,0),LVAR(1,1),CDR(),FGVAR(s(110)),CALL(2),LET(1),LVAR(0,0),FJUMP(43),LVAR(0,0),RET(),NIL(),RET(),LVAR(0,0),LVAR(0,1),PRIM(s("EQ",p(8)),2),LET(1),LVAR(0,0),FJUMP(53),LVAR(0,0),RET(),LVAR(1,0),LVAR(1,1),PRIM(s(91),1),CONST(p(64)),PRIM(s(93),2),PRIM(s(112),2),LET(1),LVAR(0,0),FJUMP(64),LVAR(0,0),RET(),NIL(),RET(),NIL(),RET()],s(110)),PRIM(s(83),2),POP()
,CONST(s("PARSE-FOR-IN",p(69))),FN([ARGS(3),CONST("list"),PRIM(s("GENSYM",p(8)),1),NIL(),LET(2),SAVE(10),GVAR(s(73)),LVAR(0,0),FGVAR(s(84)),CALL(2),POP(),SAVE(27),GVAR(s(74)),CONST(s(105)),LVAR(0,0),LVAR(1,2),LET(1),LVAR(0,0),CDR(),LSET(2,2),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(34),LVAR(1,2),CAR(),CONST(s(5)),FGVAR(s(110)),CALL(2),FJUMP(72),LVAR(1,2),LET(1),LVAR(0,0),CDR(),LSET(2,2),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),CONST("next"),PRIM(s(114),1),LSET(0,1),POP(),SAVE(54),GVAR(s(73)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),SAVE(71),GVAR(s(74)),CONST(s(105)),LVAR(0,1),LVAR(1,2),LET(1),LVAR(0,0),CDR(),LSET(2,2),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(120),GVAR(s(72)),CONST(s(13)),LVAR(0,0),CONST(s("GO",p(8))),CONST(s("%LOOP-END",p(69))),LIST(2),LIST(3),SAVE(102),LVAR(1,1),LVAR(1,0),LET(1),LVAR(0,0),CONST(l(s(3),s("IN",p(64)))),PRIM(s(104),2),FJUMP(92),CONST(s(108)),LVAR(1,0),LIST(2),JUMP(99),LVAR(0,0),CONST(l(s(4),s("ON",p(64)))),PRIM(s(104),2),FJUMP(98),LVAR(1,0),JUMP(99),NIL(),UNFR(1,0),FGVAR(s(103)),CALL(2),CONST(s(105)),LVAR(0,0),LVAR(0,1),FJUMP(111),CONST(s("FUNCALL",p(8))),LVAR(0,1),LVAR(0,0),LIST(3),JUMP(114),CONST(s(109)),LVAR(0,0),LIST(2),LIST(3),LIST(1),PRIM(s(18),2),CONS(),FGVAR(s(87)),CALL(2),POP(),UNFR(1,0),LVAR(0,2),RET()],s(113)),PRIM(s(83),2),POP()
,CONST(s("PARSE-FOR-ACROSS",p(69))),FN([ARGS(2),CONST("array"),PRIM(s(114),1),CONST("index"),PRIM(s(114),1),LET(2),SAVE(13),GVAR(s(73)),LVAR(0,0),LVAR(0,1),LIST(2),FGVAR(s(87)),CALL(2),POP(),SAVE(32),GVAR(s(74)),CONST(s(105)),LVAR(0,0),LVAR(1,1),LET(1),LVAR(0,0),CDR(),LSET(2,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LVAR(0,1),CONST(0),LIST(5),FGVAR(s(84)),CALL(2),POP(),SAVE(48),GVAR(s(72)),CONST(s(12)),CONST(s(">=",p(8))),LVAR(0,1),CONST(s("LENGTH",p(8))),LVAR(0,0),LIST(2),LIST(3),CONST(s(115)),CONST(s(116)),LIST(2),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(61),GVAR(s(72)),SAVE(59),LVAR(1,0),CONST(s("VECTOR-REF",p(8))),LVAR(0,0),LVAR(0,1),LIST(3),FGVAR(s(103)),CALL(2),FGVAR(s(87)),CALL(2),POP(),SAVE(69),GVAR(s(75)),CONST(s("INCF",p(0))),LVAR(0,1),LIST(2),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,1),RET()],s(120)),PRIM(s(83),2),POP()
,CONST(s("PARSE-FOR-EQUAL",p(69))),FN([ARGS(2),SAVE(18),GVAR(s(74)),SAVE(16),LVAR(0,0),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),FGVAR(s(103)),CALL(2),FGVAR(s(87)),CALL(2),POP(),SAVE(25),LVAR(0,1),CAR(),CONST(s(9)),FGVAR(s(110)),CALL(2),FJUMP(54),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),SAVE(53),GVAR(s(75)),SAVE(51),LVAR(0,0),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),FGVAR(s(103)),CALL(2),FGVAR(s(87)),CALL(2),POP(),LVAR(0,1),RET()],s(125)),PRIM(s(83),2),POP()
,CONST(s("CHECK-POSITIVE-LOOP-STEP",p(69))),FN([ARGS(1),LVAR(0,0),CONST(0),PRIM(s(">",p(8)),2),CONST("LOOP FOR step must be positive"),FGVAR(s("ASSERT",p(8))),CALL(2)],s(126)),PRIM(s(83),2),POP()
,CONST(s("PARSE-FOR-ARITHMETIC",p(69))),FN([ARGS(2),SAVE(6),GVAR(s(73)),LVAR(0,0),FGVAR(s(84)),CALL(2),POP(),NIL(),LET(1),NIL(),FRAME(),VAR(),NIL(),VAR(),NIL(),VAR(),CONST("limit"),PRIM(s(114),1),VAR(),CONST("step"),PRIM(s(114),1),VAR(),NIL(),VAR(),LVAR(2,1),CAR(),VAR(),SAVE(32),LVAR(0,6),CONST(l(s(34),s(35),s(61),s(60),s(58))),FGVAR(s(110)),CALL(2),VAR(),SAVE(38),LVAR(0,6),CONST(l(s(34),s(35),s(36))),FGVAR(s(110)),CALL(2),FJUMP(60),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,0),POP(),LVAR(0,0),TJUMP(73),LVAR(0,7),FJUMP(68),CONST(0),LSET(0,0),POP(),JUMP(73),SAVE(72),CONST("Downward LOOP requires init form"),FGVAR(s(80)),CALL(1),POP(),SAVE(81),GVAR(s(74)),CONST(s(105)),LVAR(2,0),LVAR(0,0),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(88),LVAR(2,1),CAR(),CONST(l(s(58),s(60),s(59),s(61),s(62))),FGVAR(s(110)),CALL(2),FJUMP(151),SAVE(95),LVAR(2,1),CAR(),CONST(l(s(59),s(62))),FGVAR(s(110)),CALL(2),FJUMP(100),NIL(),LSET(0,7),POP(),JUMP(110),SAVE(106),LVAR(2,1),CAR(),CONST(l(s(60),s(61))),FGVAR(s(110)),CALL(2),FJUMP(110),T(),LSET(0,7),POP(),SAVE(123),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),CONST(l(s(61),s(62))),FGVAR(s(110)),CALL(2),LSET(0,5),POP(),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,2),POP(),SAVE(141),GVAR(s(73)),LVAR(0,3),FGVAR(s(84)),CALL(2),POP(),SAVE(150),GVAR(s(74)),CONST(s(105)),LVAR(0,3),LVAR(0,2),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(157),LVAR(2,1),CAR(),CONST(s(5)),FGVAR(s(110)),CALL(2),FJUMP(202),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,1),POP(),SAVE(184),GVAR(s(73)),LVAR(0,4),FGVAR(s(84)),CALL(2),POP(),SAVE(193),GVAR(s(74)),CONST(s(105)),LVAR(0,4),LVAR(0,1),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(201),GVAR(s(74)),CONST(s(126)),LVAR(0,4),LIST(2),FGVAR(s(84)),CALL(2),POP(),LVAR(0,2),FJUMP(230),SAVE(229),GVAR(s(72)),CONST(s(12)),LVAR(0,5),FJUMP(215),LVAR(0,7),FJUMP(213),CONST(s(121)),JUMP(220),CONST(s("<=",p(8))),JUMP(220),LVAR(0,7),FJUMP(219),CONST(s(127)),JUMP(220),CONST(s("<",p(8))),LVAR(2,0),LVAR(0,3),LIST(3),CONST(s(115)),CONST(s(116)),LIST(2),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(255),GVAR(s(75)),CONST(s(105)),LVAR(2,0),LVAR(0,1),FJUMP(245),LVAR(0,7),FJUMP(240),CONST(s("+",p(8))),JUMP(241),CONST(s("-",p(8))),LVAR(2,0),LVAR(0,4),LIST(3),JUMP(252),LVAR(0,7),FJUMP(249),CONST(s("1+",p(8))),JUMP(250),CONST(s("1-",p(8))),LVAR(2,0),LIST(2),LIST(3),FGVAR(s(84)),CALL(2),POP(),UNFR(2,0),LVAR(0,1),RET()],s(129)),PRIM(s(83),2),POP()
,CONST(s("PARSE-FOR-BEING-SYMBOLS",p(69))),FN([ARGS(2),CONST("index"),PRIM(s(114),1),CONST("length"),PRIM(s(114),1),CONST("symbols"),PRIM(s(114),1),NIL(),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LET(5),SAVE(23),LVAR(0,4),CONST(l(s(46),s(47))),FGVAR(s(110)),CALL(2),FJUMP(29),CONST(s("%INTERNED-SYMBOLS",p(8))),LIST(1),LSET(0,3),POP(),JUMP(50),SAVE(34),LVAR(0,4),CONST(l(s(48),s(49))),FGVAR(s(110)),CALL(2),FJUMP(40),CONST(s("%ACCESSIBLE-SYMBOLS",p(8))),LIST(1),LSET(0,3),POP(),JUMP(50),SAVE(45),LVAR(0,4),CONST(l(s(50),s(51))),FGVAR(s(110)),CALL(2),FJUMP(50),CONST(s("%EXTERNAL-SYMBOLS",p(8))),LIST(1),LSET(0,3),POP(),LVAR(1,1),LET(1),LVAR(0,0),CDR(),LSET(2,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,4),POP(),SAVE(71),SAVE(67),LVAR(0,4),CONST(l(s(3),s(40))),FGVAR(s(110)),CALL(2),CONST("Bad LOOP for-being syntax: ~A"),LVAR(0,4),FGVAR(s(128)),CALL(3),POP(),CONST(s("FIND-PACKAGE",p(8))),LVAR(1,1),LET(1),LVAR(0,0),CDR(),LSET(2,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(2),LVAR(0,3),CONS(),LSET(0,3),POP(),SAVE(98),GVAR(s(73)),LVAR(0,0),CONST(0),LIST(2),LVAR(0,1),LVAR(0,2),LVAR(1,0),LIST(4),FGVAR(s(87)),CALL(2),POP(),SAVE(115),GVAR(s(74)),CONST(s(105)),LVAR(0,2),LVAR(0,3),PRIM(s("NREVERSE",p(8)),1),LIST(3),CONST(s(105)),LVAR(0,1),CONST(s(122)),LVAR(0,2),LIST(2),LIST(3),LIST(2),FGVAR(s(87)),CALL(2),POP(),SAVE(140),GVAR(s(72)),CONST(s(12)),CONST(s(121)),LVAR(0,0),LVAR(0,1),LIST(3),CONST(s(115)),CONST(s(116)),LIST(2),LIST(3),CONST(s(105)),LVAR(1,0),CONST(s(123)),LVAR(0,2),LVAR(0,0),LIST(3),LIST(3),CONST(s(124)),LVAR(0,0),LIST(2),LIST(3),FGVAR(s(87)),CALL(2),POP(),UNFR(1,0),LVAR(0,1),RET()],s(136)),PRIM(s(83),2),POP()
,CONST(s("PARSE-FOR-BEING",p(69))),FN([ARGS(2),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LET(1),SAVE(21),SAVE(17),LVAR(0,0),CONST(l(s(38),s(39))),FGVAR(s(110)),CALL(2),CONST("Bad LOOP for-being syntax: ~A"),LVAR(0,0),FGVAR(s(128)),CALL(3),POP(),SAVE(28),LVAR(1,1),CAR(),CONST(l(s(46),s(47),s(48),s(49),s(50),s(51))),FGVAR(s(110)),CALL(2),FJUMP(35),SAVE(299),LVAR(1,0),LVAR(1,1),FGVAR(s(136)),CALL(2),RET(),CONST("hash-iterator"),PRIM(s(114),1),CONST("hash-current"),PRIM(s(114),1),NIL(),NIL(),NIL(),LET(5),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(1,0),POP(),SAVE(59),LVAR(1,0),CONST(l(s(44),s(45))),FGVAR(s(110)),CALL(2),FJUMP(71),LVAR(0,4),FJUMP(67),SAVE(66),CONST("LOOP for-being value variable already defined"),FGVAR(s(80)),CALL(1),POP(),LVAR(2,0),LSET(0,4),POP(),JUMP(94),SAVE(76),LVAR(1,0),CONST(l(s(42),s(43))),FGVAR(s(110)),CALL(2),FJUMP(88),LVAR(0,3),FJUMP(84),SAVE(83),CONST("LOOP for-being key variable already defined"),FGVAR(s(80)),CALL(1),POP(),LVAR(2,0),LSET(0,3),POP(),JUMP(94),SAVE(93),CONST("Bad LOOP for-being syntax: ~A"),LVAR(1,0),FGVAR(s(80)),CALL(2),POP(),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(1,0),POP(),SAVE(115),SAVE(111),LVAR(1,0),CONST(l(s(3),s(40))),FGVAR(s(110)),CALL(2),CONST("Bad LOOP for-being syntax: ~A"),LVAR(1,0),FGVAR(s(128)),CALL(3),POP(),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,2),POP(),SAVE(133),LVAR(2,1),CAR(),CONST(s(41)),FGVAR(s(110)),CALL(2),FJUMP(210),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),FRAME(),VAR(),LVAR(0,0),CADR(),VAR(),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(2,0),POP(),SAVE(174),LVAR(2,0),CONST(l(s(44),s(45))),FGVAR(s(110)),CALL(2),FJUMP(186),LVAR(1,4),FJUMP(182),SAVE(181),CONST("LOOP for-being value variable already defined"),FGVAR(s(80)),CALL(1),POP(),LVAR(0,1),LSET(1,4),POP(),JUMP(209),SAVE(191),LVAR(2,0),CONST(l(s(42),s(43))),FGVAR(s(110)),CALL(2),FJUMP(203),LVAR(1,3),FJUMP(199),SAVE(198),CONST("LOOP for-being key variable already defined"),FGVAR(s(80)),CALL(1),POP(),LVAR(0,1),LSET(1,3),POP(),JUMP(209),SAVE(208),CONST("Bad LOOP for-being syntax: ~A"),LVAR(2,0),FGVAR(s(80)),CALL(2),POP(),UNFR(1,0),SAVE(217),GVAR(s(73)),LVAR(0,0),LVAR(0,1),LIST(2),FGVAR(s(87)),CALL(2),POP(),LVAR(0,3),FJUMP(226),SAVE(225),GVAR(s(73)),LVAR(0,3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,4),FJUMP(234),SAVE(233),GVAR(s(73)),LVAR(0,4),FGVAR(s(84)),CALL(2),POP(),SAVE(244),GVAR(s(74)),CONST(s(105)),LVAR(0,0),CONST(s("HASH-ITERATOR",p(8))),LVAR(0,2),LIST(2),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(264),GVAR(s(72)),CONST(s(105)),LVAR(0,1),CONST(s("ITERATOR-NEXT",p(8))),LVAR(0,0),LIST(2),LIST(3),CONST(s(12)),CONST(s(109)),LVAR(0,1),LIST(2),CONST(s(115)),CONST(s(116)),LIST(2),LIST(3),LIST(2),FGVAR(s(87)),CALL(2),POP(),LVAR(0,3),FJUMP(281),SAVE(280),GVAR(s(72)),CONST(s(105)),LVAR(0,3),CONST(s(123)),CONST(s(108)),LVAR(0,1),LIST(2),CONST(0),LIST(3),LIST(3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,4),FJUMP(297),SAVE(296),GVAR(s(72)),CONST(s(105)),LVAR(0,4),CONST(s(123)),CONST(s(108)),LVAR(0,1),LIST(2),CONST(1),LIST(3),LIST(3),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(1,1),RET()],s(142)),PRIM(s(83),2),POP()
,FRAME(),FN([ARG_(1),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LET(1),SAVE(16),LVAR(0,0),CONST(l(s(3),s(4))),FGVAR(s(110)),CALL(2),FJUMP(24),SAVE(79),LVAR(0,0),LVAR(1,0),LVAR(1,1),FGVAR(s(113)),CALL(3),RET(),SAVE(29),LVAR(0,0),CONST(s("=",p(8))),FGVAR(s(110)),CALL(2),FJUMP(36),SAVE(79),LVAR(1,0),LVAR(1,1),FGVAR(s(125)),CALL(2),JUMP(79),SAVE(41),LVAR(0,0),CONST(s(6)),FGVAR(s(110)),CALL(2),FJUMP(48),SAVE(79),LVAR(1,0),LVAR(1,1),FGVAR(s(120)),CALL(2),JUMP(79),SAVE(53),LVAR(0,0),CONST(l(s(34),s(36),s(35),s(58),s(60),s(61))),FGVAR(s(110)),CALL(2),FJUMP(62),SAVE(79),LVAR(1,0),LVAR(0,0),LVAR(1,1),CONS(),FGVAR(s(129)),CALL(2),JUMP(79),SAVE(67),LVAR(0,0),CONST(s(37)),FGVAR(s(110)),CALL(2),FJUMP(74),SAVE(79),LVAR(1,0),LVAR(1,1),FGVAR(s(142)),CALL(2),JUMP(79),SAVE(79),CONST("Unknown token in LOOP FOR: ~A"),LVAR(0,0),FGVAR(s(80)),CALL(2),RET()],s(99)),VAR(),SAVE(121),CONST(l(s(14),s(2))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),CONST("repeat"),PRIM(s(114),1),LET(1),SAVE(9),GVAR(s(73)),LVAR(0,0),FGVAR(s(84)),CALL(2),POP(),SAVE(26),GVAR(s(74)),CONST(s(105)),LVAR(0,0),LVAR(1,0),LET(1),LVAR(0,0),CDR(),LSET(2,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(42),GVAR(s(72)),CONST(s(12)),CONST(s(131)),CONST(s("DECF",p(0))),LVAR(0,0),LIST(2),CONST(0),LIST(3),CONST(s(115)),CONST(s(116)),LIST(2),LIST(3),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(131),CONST(s(11)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),FJUMP(16),LVAR(1,0),CAR(),PRIM(s(90),1),LET(1),LVAR(0,0),FJUMP(13),LVAR(0,0),JUMP(14),NIL(),UNFR(1,0),JUMP(17),NIL(),UNFR(1,0),FJUMP(31),SAVE(25),GVAR(s(72)),LVAR(0,0),CAR(),FGVAR(s(84)),CALL(2),POP(),LVAR(1,0),LVAR(0,0),CDR(),PRIM(s(82),2),RET(),LVAR(0,0),RET()],s(99)),VAR(),SAVE(141),CONST(l(s(15),s("DOING",p(69)))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),SAVE(17),GVAR(s(72)),CONST(s("RETURN-FROM",p(8))),GVAR(s(77)),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,0),RET()],s(99)),VAR(),SAVE(151),CONST(s("RETURN",p(8))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),CAR(),GSET(s(77)),POP(),LVAR(0,0),CDR(),RET()],s(99)),VAR(),SAVE(161),CONST(s(7)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),FJUMP(16),LVAR(1,0),CAR(),PRIM(s(90),1),LET(1),LVAR(0,0),FJUMP(13),LVAR(0,0),JUMP(14),NIL(),UNFR(1,0),JUMP(17),NIL(),UNFR(1,0),FJUMP(31),SAVE(25),GVAR(s(76)),LVAR(0,0),CAR(),FGVAR(s(84)),CALL(2),POP(),LVAR(1,0),LVAR(0,0),CDR(),PRIM(s(82),2),RET(),LVAR(0,0),RET()],s(99)),VAR(),SAVE(171),CONST(s(31)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),FJUMP(16),LVAR(1,0),CAR(),PRIM(s(90),1),LET(1),LVAR(0,0),FJUMP(13),LVAR(0,0),JUMP(14),NIL(),UNFR(1,0),JUMP(17),NIL(),UNFR(1,0),FJUMP(31),SAVE(25),GVAR(s(74)),LVAR(0,0),CAR(),FGVAR(s(84)),CALL(2),POP(),LVAR(1,0),LVAR(0,0),CDR(),PRIM(s(82),2),RET(),LVAR(0,0),RET()],s(99)),VAR(),SAVE(181),CONST(s(54)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,0),CAR(),CONST(s(145)),FGVAR(s(110)),CALL(2),FJUMP(37),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(38),NIL(),LET(2),LVAR(0,0),PRIM(s(79),1),FJUMP(60),SAVE(47),GVAR(s(73)),LVAR(0,0),FGVAR(s(84)),CALL(2),POP(),LVAR(0,1),FJUMP(70),SAVE(58),GVAR(s(74)),CONST(s(105)),LVAR(0,0),LVAR(0,1),LIST(3),FGVAR(s(84)),CALL(2),POP(),JUMP(70),SAVE(69),GVAR(s(74)),SAVE(67),LVAR(0,0),LVAR(0,1),FGVAR(s(103)),CALL(2),FGVAR(s(87)),CALL(2),POP(),SAVE(76),LVAR(1,0),CAR(),CONST(s(29)),FGVAR(s(110)),CALL(2),FJUMP(82),LVAR(2,0),LVAR(1,0),CDR(),PRIM(s(82),2),RET(),LVAR(1,0),RET()],s(99)),VAR(),SAVE(191),CONST(s(28)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,CONST(s("MAYBE-INTO",p(69))),FN([ARG_(0),LVAR(0,0),FRAME(),VAR(),LVAR(0,0),FJUMP(16),LVAR(0,0),CAR(),LET(1),LVAR(1,0),CDR(),LSET(1,0),POP(),LVAR(0,0),UNFR(1,0),JUMP(20),SAVE(20),CONST(s("NAME",p(8))),FGVAR(s(96)),CALL(1),VAR(),CONST(s("IF",p(8))),CONST(s(110)),CONST(s(108)),CONST(s(97)),LIST(2),CONST(s(100)),CONST(s(30)),LIST(2),LIST(3),CONST(s("PROGN",p(8))),CONST(s("POP",p(0))),CONST(s(97)),LIST(2),CONST(s(154)),CONST(s(97)),LIST(2),LIST(3),CONST(s(114)),LVAR(0,1),LIST(2),LIST(4),RET()],l(s(100),s(150))),PRIM(s(102),2),POP()
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,0),CAR(),CONST(s(30)),FGVAR(s(110)),CALL(2),FJUMP(37),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(39),CONST("collect"),PRIM(s(114),1),CONST("tail"),PRIM(s(114),1),LET(3),SAVE(49),GVAR(s(73)),LVAR(0,1),LVAR(0,2),LIST(2),FGVAR(s(87)),CALL(2),POP(),SAVE(79),GVAR(s(72)),CONST(s(106)),CONST(s("CELL",p(8))),CONST(s("CONS",p(8))),LVAR(0,0),NIL(),LIST(3),LIST(2),LIST(1),CONST(s(105)),LVAR(0,2),CONST(s(152)),LVAR(0,2),CONST(s(105)),CONST(s(109)),LVAR(0,2),LIST(2),CONST(s(155)),LIST(3),CONST(s(105)),LVAR(0,1),CONST(s(155)),LIST(3),LIST(4),LIST(3),LIST(3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,1),PRIM(s("SYMBOL-PACKAGE",p(8)),1),TJUMP(89),SAVE(88),GVAR(s(76)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(205),CONST(l(s(16),s(17))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,CONST(s("%LOOP-MAKE-LIST",p(69))),FN([ARGS(2),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,1),CAR(),CONST(s(30)),FGVAR(s(110)),CALL(2),FJUMP(37),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(43),LVAR(0,0),FJUMP(41),CONST("append"),JUMP(42),CONST("nconc"),PRIM(s(114),1),LVAR(0,0),FJUMP(47),NIL(),JUMP(49),CONST("tail"),PRIM(s(114),1),LET(3),SAVE(55),GVAR(s(73)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),LVAR(0,2),FJUMP(64),SAVE(63),GVAR(s(73)),LVAR(0,2),FGVAR(s(84)),CALL(2),POP(),SAVE(106),GVAR(s(72)),LVAR(1,0),FJUMP(76),CONST(s(105)),LVAR(0,1),CONST(s(18)),LVAR(0,1),LVAR(0,0),LIST(3),LIST(3),JUMP(104),CONST(s(106)),CONST(s("LS",p(69))),LVAR(0,0),LIST(2),LIST(1),CONST(s(12)),CONST(s(159)),CONST(s(152)),LVAR(0,2),CONST(s(105)),CONST(s(109)),LVAR(0,2),LIST(2),CONST(s(159)),LIST(3),CONST(s(105)),LVAR(0,1),CONST(s(159)),LIST(3),LIST(4),CONST(s(105)),LVAR(0,2),CONST(s(88)),CONST(s(159)),LIST(2),LIST(3),LIST(4),LIST(3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,1),PRIM(s(157),1),TJUMP(116),SAVE(115),GVAR(s(76)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,1),RET()],s(158)),PRIM(s(83),2),POP()
,FRAME(),FN([ARG_(0),T(),LVAR(0,0),FGVAR(s(158)),CALL(2)],s(99)),VAR(),SAVE(219),CONST(l(s(18),s(19))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),NIL(),LVAR(0,0),FGVAR(s(158)),CALL(2)],s(99)),VAR(),SAVE(229),CONST(l(s(20),s(21))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,0),CAR(),CONST(s(30)),FGVAR(s(110)),CALL(2),FJUMP(37),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(39),CONST("sum"),PRIM(s(114),1),LET(2),SAVE(45),GVAR(s(73)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),SAVE(54),GVAR(s(74)),CONST(s(105)),LVAR(0,1),CONST(0),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(66),GVAR(s(72)),CONST(s(105)),LVAR(0,1),CONST(s(132)),LVAR(0,1),LVAR(0,0),LIST(3),LIST(3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,1),PRIM(s(157),1),TJUMP(76),SAVE(75),GVAR(s(76)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(239),CONST(l(s(22),s(23))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,0),CAR(),CONST(s(30)),FGVAR(s(110)),CALL(2),FJUMP(37),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(39),CONST("count"),PRIM(s(114),1),LET(2),SAVE(47),GVAR(s(73)),LVAR(0,1),CONST(0),LIST(2),FGVAR(s(84)),CALL(2),POP(),SAVE(58),GVAR(s(72)),CONST(s(12)),LVAR(0,0),CONST(s(124)),LVAR(0,1),LIST(2),LIST(3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,1),PRIM(s(157),1),TJUMP(68),SAVE(67),GVAR(s(76)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(249),CONST(l(s(32),s(33))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,CONST(s("EXTREMIZING",p(69))),FN([ARGS(3),LVAR(0,2),LET(1),LVAR(0,0),CDR(),LSET(1,2),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,2),CAR(),CONST(s(30)),FGVAR(s(110)),CALL(2),FJUMP(37),LVAR(0,2),LET(1),LVAR(0,0),CDR(),LSET(1,2),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,2),LET(1),LVAR(0,0),CDR(),LSET(1,2),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(39),LVAR(0,0),PRIM(s(114),1),LET(2),SAVE(45),GVAR(s(73)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),SAVE(71),GVAR(s(72)),CONST(s(106)),CONST(s("VAL",p(8))),LVAR(0,0),LIST(2),LIST(1),CONST(s(152)),CONST(s("OR",p(8))),CONST(s("NOT",p(8))),LVAR(0,1),LIST(2),LVAR(1,1),CONST(s(161)),LVAR(0,1),LIST(3),LIST(3),CONST(s(105)),LVAR(0,1),CONST(s(161)),LIST(3),LIST(3),LIST(3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,1),PRIM(s(157),1),TJUMP(81),SAVE(80),GVAR(s(76)),LVAR(0,1),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,2),RET()],s(160)),PRIM(s(83),2),POP()
,FRAME(),FN([ARG_(0),CONST("max"),CONST(s(127)),LVAR(0,0),FGVAR(s(160)),CALL(3)],s(99)),VAR(),SAVE(263),CONST(l(s(24),s(25))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),CONST("min"),CONST(s(131)),LVAR(0,0),FGVAR(s(160)),CALL(3)],s(99)),VAR(),SAVE(273),CONST(l(s(26),s(27))),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),NIL(),LIST(1),FRAME(),VAR(),BIND(s(72),0),SAVE(19),LVAR(1,0),FGVAR(s(78)),CALL(1),LSET(1,0),POP(),GVAR(s(72)),CAR(),UNFR(1,1),LET(2),SAVE(33),GVAR(s(72)),CONST(s(12)),LVAR(0,0),LVAR(0,1),LIST_(3),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(283),CONST(s(12)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),NIL(),LIST(1),FRAME(),VAR(),BIND(s(72),0),SAVE(19),LVAR(1,0),FGVAR(s(78)),CALL(1),LSET(1,0),POP(),GVAR(s(72)),CAR(),UNFR(1,1),LET(2),SAVE(33),GVAR(s(72)),CONST(s(13)),LVAR(0,0),LVAR(0,1),LIST_(3),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(293),CONST(s(13)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),NIL(),LIST(1),FRAME(),VAR(),BIND(s(72),0),SAVE(19),LVAR(1,0),FGVAR(s(78)),CALL(1),LSET(1,0),POP(),GVAR(s(72)),CAR(),UNFR(1,1),SAVE(30),LVAR(0,0),CAR(),CONST(s(10)),FGVAR(s(110)),CALL(2),FJUMP(47),NIL(),LIST(1),FRAME(),VAR(),BIND(s(72),0),SAVE(41),LVAR(1,0),CDR(),FGVAR(s(78)),CALL(1),LSET(1,0),POP(),GVAR(s(72)),CAR(),UNFR(1,1),JUMP(48),NIL(),LET(3),SAVE(62),GVAR(s(72)),CONST(s(152)),LVAR(0,0),CONST(s(153)),LVAR(0,1),CONS(),CONST(s(153)),LVAR(0,2),CONS(),LIST(4),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(303),CONST(s(152)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),LET(1),SAVE(21),GVAR(s(72)),CONST(s(13)),LVAR(0,0),CONST(s(115)),CONST(s(116)),LIST(2),LIST(3),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(313),CONST(s(52)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),LET(1),SAVE(21),GVAR(s(72)),CONST(s(12)),LVAR(0,0),CONST(s(115)),CONST(s(116)),LIST(2),LIST(3),FGVAR(s(84)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(99)),VAR(),SAVE(323),CONST(s(53)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),SAVE(20),GVAR(s(72)),CONST(s(13)),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),CONST(s(148)),GVAR(s(77)),NIL(),LIST(3),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(26),GVAR(s(76)),T(),FGVAR(s(84)),CALL(2),POP(),LVAR(0,0),RET()],s(99)),VAR(),SAVE(333),CONST(s(55)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),SAVE(20),GVAR(s(72)),CONST(s(12)),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),CONST(s(148)),GVAR(s(77)),NIL(),LIST(3),LIST(3),FGVAR(s(84)),CALL(2),POP(),SAVE(26),GVAR(s(76)),T(),FGVAR(s(84)),CALL(2),POP(),LVAR(0,0),RET()],s(99)),VAR(),SAVE(343),CONST(s(56)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),SAVE(26),GVAR(s(72)),CONST(s(106)),CONST(s("OBJ",p(8))),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(2),LIST(1),CONST(s(12)),CONST(s(164)),CONST(s(148)),GVAR(s(77)),CONST(s(164)),LIST(3),LIST(3),LIST(3),FGVAR(s(84)),CALL(2),POP(),LVAR(0,0),RET()],s(99)),VAR(),SAVE(353),CONST(s(57)),LVAR(0,0),FGVAR(s(89)),CALL(2),POP(),UNFR(1,0)
,CONST(s("EXPAND-LOOP",p(69))),FN([ARGS(1),NIL(),LIST(1),NIL(),LIST(1),NIL(),LIST(1),NIL(),LIST(1),NIL(),LIST(1),NIL(),LET(6),BIND(s(72),0),BIND(s(73),1),BIND(s(74),2),BIND(s(75),3),BIND(s(76),4),BIND(s(77),5),FRAME(),FN([ARGS(1),LVAR(0,0),FJUMP(9),SAVE(7),LVAR(0,0),FGVAR(s(78)),CALL(1),LVAR(1,0),CALL(1),NIL(),RET()],s("REC",p(8))),VAR(),SAVE(26),LVAR(2,0),LVAR(0,0),CALL(1),POP(),UNFR(1,0),CONST(s("BLOCK",p(8))),GVAR(s(77)),CONST(s(106)),GVAR(s(73)),CAR(),CONST(s("TAGBODY",p(8))),GVAR(s(74)),CAR(),CONST(s("%LOOP-NEXT",p(69))),GVAR(s(72)),CAR(),GVAR(s(75)),CAR(),CONST(s(115)),CONST(s(169)),LIST(2),CONST(s(116)),LIST(2),PRIM(s(18),3),CONS(),PRIM(s(18),2),CONS(),GVAR(s(76)),CAR(),LIST_(4),LIST(3),RET()],s(165)),PRIM(s(83),2),POP()
,CONST(s(1)),FN([ARG_(0),LVAR(0,0),FRAME(),VAR(),LVAR(0,0),VAR(),LVAR(0,1),CAR(),PRIM(s(79),1),FJUMP(15),SAVE(27),LVAR(0,1),FGVAR(s(165)),CALL(1),RET(),CONST(s(167)),NIL(),CONST(s(106)),CONST(s(169)),NIL(),LVAR(0,1),CONST(s(169)),LIST(1),LIST(1),PRIM(s(18),2),LIST_(4),LIST(3),RET()],l(s(100),s(1))),PRIM(s(102),2),POP()
,CONST("lisp/loop.lisp"),CONST([[s(70),"DEFPARAMETER",704],[s(72),"DEFPARAMETER",743],[s(73),"DEFPARAMETER",785],[s(74),"DEFPARAMETER",832],[s(75),"DEFPARAMETER",875],[s(76),"DEFPARAMETER",920],[s(77),"DEFPARAMETER",964],[s(78),"DEFUN",1002],[s(84),"DEFUN",1283],[s(87),"DEFUN",1454],[s(89),"DEFUN",1608],[s(95),"DEFMACRO",2071],[s(103),"DEFUN",2196],[s(110),"DEFUN",2664],[s(113),"DEFUN",2940],[s(120),"DEFUN",3692],[s(125),"DEFUN",4175],[s(126),"DEFUN",4376],[s(129),"DEFUN",4472],[s(136),"DEFUN",6277],[s(142),"DEFUN",7401],[s(150),"DEFMACRO",11707],[s(158),"DEFUN",12334],[s(160),"DEFUN",13747],[s(165),"DEFUN",16180],[s(1),"DEFMACRO",16809]]),PRIM(s("%GROK-XREF-INFO",p(8)),2),POP()
