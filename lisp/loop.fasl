CONST(s("LOOP",p("SL"))),CONST(s("AS",p(0))),CONST(s("IN",p(0))),CONST(s("ON",p(0))),CONST(s("BY",p(0))),CONST(s("ACROSS",p(0))),CONST(s("NAMED",p(0))),CONST(s("THEN",p("%"))),CONST(s("ELSE",p(8))),CONST(s("REPEAT",p(0))),CONST(s("WHEN",p(8))),CONST(s("UNLESS",p(8))),CONST(s("FOR",p(0))),CONST(s("DO",p(0))),CONST(s("COLLECT",p(0))),CONST(s("COLLECTING",p(0))),CONST(s("APPEND",p(8))),CONST(s("APPENDING",p(0))),CONST(s("NCONC",p(8))),CONST(s("NCONCING",p(0))),CONST(s("SUM",p(0))),CONST(s("SUMMING",p(0))),CONST(s("MAXIMIZE",p(0))),CONST(s("MAXIMIZING",p(0))),CONST(s("MINIMIZE",p(0))),CONST(s("MINIMIZING",p(0))),CONST(s("WITH",p(0))),CONST(s("AND",p(8))),CONST(s("INTO",p(0))),CONST(s("FINALLY",p(0))),CONST(s("COUNT",p(0))),CONST(s("COUNTING",p(0))),CONST(s("FROM",p(0))),CONST(s("UPFROM",p(0))),CONST(s("DOWNFROM",p(0))),CONST(s("BEING",p(0))),CONST(s("EACH",p(0))),CONST(s("THE",p(0))),CONST(s("OF",p(0))),CONST(s("USING",p(0))),CONST(s("HASH-KEY",p(0))),CONST(s("HASH-KEYS",p(8))),CONST(s("HASH-VALUE",p(0))),CONST(s("HASH-VALUES",p(8))),CONST(s("PRESENT-SYMBOL",p(0))),CONST(s("PRESENT-SYMBOLS",p(0))),CONST(s("SYMBOL",p(0))),CONST(s("SYMBOLS",p(0))),CONST(s("EXTERNAL-SYMBOL",p(0))),CONST(s("EXTERNAL-SYMBOLS",p(0))),CONST(s("TO",p(0))),CONST(s("DOWNTO",p(0))),CONST(s("UPTO",p(0))),CONST(s("BELOW",p(0))),CONST(s("ABOVE",p(0))),LIST(55),CONST(p(0)),PRIM(s("%EXPORT",p(8)),2),POP()
,CONST(s("SL-LOOP",p("KEYWORD"))),CONST(l(s("SL",p(58)),s("%",p(58)))),NIL(),PRIM(s("MAKE-PACKAGE",p(8)),3),LET(1),UNFR(1,0)
,CONST(s("*CLAUSE-PARSERS*",p("SL-LOOP"))),PRIM(s("%SPECIAL!",p(8)),1),POP(),PRIM(s("MAKE-HASH",p(8)),0),GSET(s(64)),POP()
,CONST(s("*LOOP-BODY*",p(63))),PRIM(s(65),1),POP(),NIL(),LIST(1),GSET(s(67)),POP()
,CONST(s("*LOOP-VARIABLES*",p(63))),PRIM(s(65),1),POP(),NIL(),LIST(1),GSET(s(68)),POP()
,CONST(s("*LOOP-START*",p(63))),PRIM(s(65),1),POP(),NIL(),LIST(1),GSET(s(69)),POP()
,CONST(s("*LOOP-ITERATE*",p(63))),PRIM(s(65),1),POP(),NIL(),LIST(1),GSET(s(70)),POP()
,CONST(s("*LOOP-FINISH*",p(63))),PRIM(s(65),1),POP(),NIL(),LIST(1),GSET(s(71)),POP()
,CONST(s("*LOOP-BLOCK-NAME*",p(63))),PRIM(s(65),1),POP(),NIL(),GSET(s(72)),POP()
,CONST(s("%LIST-ADD",p(63))),FN([ARGS(2),LVAR(0,1),LIST(1),LET(1),LVAR(1,0),CAR(),FJUMP(13),LVAR(1,0),CDR(),LVAR(0,0),PRIM(s("RPLACD",p(8)),2),POP(),JUMP(17),LVAR(1,0),LVAR(0,0),PRIM(s("RPLACA",p(8)),2),POP(),LVAR(1,0),LVAR(0,0),PRIM(s(74),2),RET()],s(73)),PRIM(s("SET-SYMBOL-FUNCTION!",p(8)),2),POP()
,CONST(s("%LIST-APPEND",p(63))),FN([ARGS(2),LVAR(0,0),CAR(),FJUMP(10),LVAR(0,0),CDR(),LVAR(0,1),PRIM(s(74),2),POP(),JUMP(14),LVAR(0,0),LVAR(0,1),PRIM(s(75),2),POP(),LVAR(0,0),SAVE(19),LVAR(0,1),FGVAR(s("LAST",p(8))),CALL(1),PRIM(s(74),2),RET()],s(77)),PRIM(s(76),2),POP()
,CONST(s("%REGISTER-PARSER",p(63))),FN([ARGS(2),LVAR(0,0),PRIM(s("CONSP",p(8)),1),FJUMP(16),SAVE(10),LVAR(0,0),CAR(),LVAR(0,1),FGVAR(s(79)),CALL(2),POP(),LVAR(0,0),CDR(),LVAR(0,1),FGVAR(s(79)),CALL(2),LVAR(0,0),PRIM(s("SYMBOLP",p(8)),1),FJUMP(24),LVAR(0,0),PRIM(s("SYMBOL-NAME",p(8)),1),LVAR(0,1),FGVAR(s(79)),CALL(2),LVAR(0,0),PRIM(s("STRINGP",p(8)),1),FJUMP(44),LVAR(0,0),CONST(p(0)),PRIM(s("INTERN",p(8)),2),LVAR(0,0),CONST(p(58)),PRIM(s(84),2),LET(2),GVAR(s(64)),LVAR(0,0),LVAR(1,1),PRIM(s("HASH-ADD",p(8)),3),POP(),GVAR(s(64)),LVAR(0,1),LVAR(1,1),PRIM(s(85),3),RET(),NIL(),RET()],s(79)),PRIM(s(76),2),POP()
,CONST(s("DEFPARSER",p(63))),FN([ARG_(0),LVAR(0,0),FRAME(),VAR(),LVAR(0,0),FJUMP(16),LVAR(0,0),CAR(),LET(1),LVAR(1,0),CDR(),LSET(1,0),POP(),LVAR(0,0),UNFR(1,0),JUMP(20),SAVE(20),CONST(s(48)),FGVAR(s("%DBIND-ERROR-MISSING-ARG",p(0))),CALL(1),VAR(),LVAR(0,0),FJUMP(33),LVAR(0,0),CAR(),LET(1),LVAR(1,0),CDR(),LSET(1,0),POP(),LVAR(0,0),UNFR(1,0),JUMP(37),SAVE(37),CONST(s("ARGS",p(8))),FGVAR(s(87)),CALL(1),VAR(),LVAR(0,0),VAR(),CONST(s("LABELS",p(8))),CONST(s("PARSER",p(63))),LVAR(0,2),LVAR(0,3),LIST_(3),LIST(1),CONST(s(79)),CONST(s("QUOTE",p(8))),LVAR(0,1),LIST(2),CONST(s("FUNCTION",p(8))),CONST(s(90)),LIST(2),LIST(3),LIST(3),RET()],l(s(91),s(86))),PRIM(s("%MACRO!",p(8)),2),POP()
,CONST(s("DSETQ",p(63))),FN([ARGS(2),LVAR(0,0),FJUMP(67),LVAR(0,0),PRIM(s(81),1),FJUMP(27),LVAR(0,0),GVAR(s(68)),CAR(),PRIM(s("%MEMQ",p(8)),2),TJUMP(17),SAVE(16),GVAR(s(68)),LVAR(0,0),FGVAR(s(73)),CALL(2),POP(),LVAR(0,1),FJUMP(25),CONST(s("SETF",p(0))),LVAR(0,0),LVAR(0,1),LIST(3),LIST(1),RET(),NIL(),RET(),LVAR(0,0),PRIM(s(80),1),FJUMP(65),LVAR(0,1),FJUMP(53),CONST(s("LET",p(8))),CONST(s("%DATA",p(63))),LVAR(0,1),LIST(2),LIST(1),SAVE(43),LVAR(0,0),CAR(),CONST(l(s("CAR",p(8)),s(98))),FGVAR(s(94)),CALL(2),SAVE(49),LVAR(0,0),CDR(),CONST(l(s("CDR",p(8)),s(98))),FGVAR(s(94)),CALL(2),PRIM(s(18),2),LIST_(3),LIST(1),RET(),SAVE(59),LVAR(0,0),CAR(),NIL(),FGVAR(s(94)),CALL(2),POP(),LVAR(0,0),CDR(),NIL(),FGVAR(s(94)),CALL(2),NIL(),RET(),NIL(),RET()],s(94)),PRIM(s(76),2),POP()
,CONST(s("ISKW",p(63))),FN([ARGS(2),LVAR(0,1),LET(1),LVAR(0,0),FJUMP(15),LVAR(1,0),PRIM(s(81),1),LET(1),LVAR(0,0),FJUMP(12),LVAR(0,0),JUMP(13),NIL(),UNFR(1,0),JUMP(16),NIL(),UNFR(1,0),FJUMP(66),LVAR(0,1),PRIM(s("LISTP",p(8)),1),FJUMP(45),SAVE(27),LVAR(0,0),LVAR(0,1),CAR(),FGVAR(s(101)),CALL(2),LET(1),LVAR(0,0),FJUMP(32),LVAR(0,0),RET(),SAVE(38),LVAR(1,0),LVAR(1,1),CDR(),FGVAR(s(101)),CALL(2),LET(1),LVAR(0,0),FJUMP(43),LVAR(0,0),RET(),NIL(),RET(),LVAR(0,0),LVAR(0,1),PRIM(s("EQ",p(8)),2),LET(1),LVAR(0,0),FJUMP(53),LVAR(0,0),RET(),LVAR(1,0),LVAR(1,1),PRIM(s(82),1),CONST(p(58)),PRIM(s(84),2),PRIM(s(103),2),LET(1),LVAR(0,0),FJUMP(64),LVAR(0,0),RET(),NIL(),RET(),NIL(),RET()],s(101)),PRIM(s(76),2),POP()
,CONST(s("PARSE-FOR-IN",p(63))),FN([ARGS(3),CONST("list"),PRIM(s("GENSYM",p(8)),1),NIL(),LET(2),SAVE(10),GVAR(s(68)),LVAR(0,0),FGVAR(s(73)),CALL(2),POP(),SAVE(27),GVAR(s(69)),CONST(s(96)),LVAR(0,0),LVAR(1,2),LET(1),LVAR(0,0),CDR(),LSET(2,2),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(34),LVAR(1,2),CAR(),CONST(s(5)),FGVAR(s(101)),CALL(2),FJUMP(72),LVAR(1,2),LET(1),LVAR(0,0),CDR(),LSET(2,2),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),CONST("next"),PRIM(s(105),1),LSET(0,1),POP(),SAVE(54),GVAR(s(68)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),SAVE(71),GVAR(s(69)),CONST(s(96)),LVAR(0,1),LVAR(1,2),LET(1),LVAR(0,0),CDR(),LSET(2,2),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(120),GVAR(s(67)),CONST(s(13)),LVAR(0,0),CONST(s("GO",p(8))),CONST(s("%LOOP-END",p(63))),LIST(2),LIST(3),SAVE(102),LVAR(1,1),LVAR(1,0),LET(1),LVAR(0,0),CONST(l(s(3),s("IN",p(58)))),PRIM(s(95),2),FJUMP(92),CONST(s(99)),LVAR(1,0),LIST(2),JUMP(99),LVAR(0,0),CONST(l(s(4),s("ON",p(58)))),PRIM(s(95),2),FJUMP(98),LVAR(1,0),JUMP(99),NIL(),UNFR(1,0),FGVAR(s(94)),CALL(2),CONST(s(96)),LVAR(0,0),LVAR(0,1),FJUMP(111),CONST(s("FUNCALL",p(8))),LVAR(0,1),LVAR(0,0),LIST(3),JUMP(114),CONST(s(100)),LVAR(0,0),LIST(2),LIST(3),LIST(1),PRIM(s(18),2),CONS(),FGVAR(s(77)),CALL(2),POP(),UNFR(1,0),LVAR(0,2),RET()],s(104)),PRIM(s(76),2),POP()
,CONST(s("PARSE-FOR-ACROSS",p(63))),FN([ARGS(2),CONST("array"),PRIM(s(105),1),CONST("index"),PRIM(s(105),1),LET(2),SAVE(13),GVAR(s(68)),LVAR(0,0),LVAR(0,1),LIST(2),FGVAR(s(77)),CALL(2),POP(),SAVE(32),GVAR(s(69)),CONST(s(96)),LVAR(0,0),LVAR(1,1),LET(1),LVAR(0,0),CDR(),LSET(2,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LVAR(0,1),CONST(0),LIST(5),FGVAR(s(73)),CALL(2),POP(),SAVE(48),GVAR(s(67)),CONST(s(12)),CONST(s(">=",p(8))),LVAR(0,1),CONST(s("LENGTH",p(8))),LVAR(0,0),LIST(2),LIST(3),CONST(s(106)),CONST(s(107)),LIST(2),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(61),GVAR(s(67)),SAVE(59),LVAR(1,0),CONST(s("VECTOR-REF",p(8))),LVAR(0,0),LVAR(0,1),LIST(3),FGVAR(s(94)),CALL(2),FGVAR(s(77)),CALL(2),POP(),SAVE(69),GVAR(s(70)),CONST(s("INCF",p(0))),LVAR(0,1),LIST(2),FGVAR(s(73)),CALL(2),POP(),UNFR(1,0),LVAR(0,1),RET()],s(111)),PRIM(s(76),2),POP()
,CONST(s("PARSE-FOR-EQUAL",p(63))),FN([ARGS(2),SAVE(18),GVAR(s(69)),SAVE(16),LVAR(0,0),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),FGVAR(s(94)),CALL(2),FGVAR(s(77)),CALL(2),POP(),SAVE(25),LVAR(0,1),CAR(),CONST(s(9)),FGVAR(s(101)),CALL(2),FJUMP(54),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),SAVE(53),GVAR(s(70)),SAVE(51),LVAR(0,0),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),FGVAR(s(94)),CALL(2),FGVAR(s(77)),CALL(2),POP(),LVAR(0,1),RET()],s(116)),PRIM(s(76),2),POP()
,CONST(s("PARSE-FOR-ARITHMETIC",p(63))),FN([ARGS(2),SAVE(6),GVAR(s(68)),LVAR(0,0),FGVAR(s(73)),CALL(2),POP(),NIL(),LET(1),NIL(),FRAME(),VAR(),NIL(),VAR(),NIL(),VAR(),CONST("limit"),PRIM(s(105),1),VAR(),CONST("step"),PRIM(s(105),1),VAR(),NIL(),VAR(),LVAR(2,1),CAR(),VAR(),SAVE(32),LVAR(0,6),CONST(l(s(34),s(35),s(55),s(54),s(52))),FGVAR(s(101)),CALL(2),VAR(),SAVE(38),LVAR(0,6),CONST(l(s(34),s(35),s(36))),FGVAR(s(101)),CALL(2),FJUMP(60),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,0),POP(),LVAR(0,0),TJUMP(73),LVAR(0,7),FJUMP(68),CONST(0),LSET(0,0),POP(),JUMP(73),SAVE(72),CONST("Downward LOOP requires init form"),FGVAR(s("ERROR",p(8))),CALL(1),POP(),SAVE(81),GVAR(s(69)),CONST(s(96)),LVAR(2,0),LVAR(0,0),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(88),LVAR(2,1),CAR(),CONST(l(s(52),s(54),s(53),s(55),s(56))),FGVAR(s(101)),CALL(2),FJUMP(151),SAVE(95),LVAR(2,1),CAR(),CONST(l(s(53),s(56))),FGVAR(s(101)),CALL(2),FJUMP(100),NIL(),LSET(0,7),POP(),JUMP(110),SAVE(106),LVAR(2,1),CAR(),CONST(l(s(54),s(55))),FGVAR(s(101)),CALL(2),FJUMP(110),T(),LSET(0,7),POP(),SAVE(123),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),CONST(l(s(55),s(56))),FGVAR(s(101)),CALL(2),LSET(0,5),POP(),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,2),POP(),SAVE(141),GVAR(s(68)),LVAR(0,3),FGVAR(s(73)),CALL(2),POP(),SAVE(150),GVAR(s(69)),CONST(s(96)),LVAR(0,3),LVAR(0,2),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(157),LVAR(2,1),CAR(),CONST(s(5)),FGVAR(s(101)),CALL(2),FJUMP(206),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,1),POP(),SAVE(184),GVAR(s(68)),LVAR(0,4),FGVAR(s(73)),CALL(2),POP(),SAVE(193),GVAR(s(69)),CONST(s(96)),LVAR(0,4),LVAR(0,1),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(205),GVAR(s(69)),CONST(s("ASSERT",p(8))),CONST(s(">",p(8))),LVAR(0,4),CONST(0),LIST(3),CONST("LOOP FOR step must be positive"),LIST(3),FGVAR(s(73)),CALL(2),POP(),LVAR(0,2),FJUMP(234),SAVE(233),GVAR(s(67)),CONST(s(12)),LVAR(0,5),FJUMP(219),LVAR(0,7),FJUMP(217),CONST(s(112)),JUMP(224),CONST(s("<=",p(8))),JUMP(224),LVAR(0,7),FJUMP(223),CONST(s(120)),JUMP(224),CONST(s("<",p(8))),LVAR(2,0),LVAR(0,3),LIST(3),CONST(s(106)),CONST(s(107)),LIST(2),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(259),GVAR(s(70)),CONST(s(96)),LVAR(2,0),LVAR(0,1),FJUMP(249),LVAR(0,7),FJUMP(244),CONST(s("+",p(8))),JUMP(245),CONST(s("-",p(8))),LVAR(2,0),LVAR(0,4),LIST(3),JUMP(256),LVAR(0,7),FJUMP(253),CONST(s("1+",p(8))),JUMP(254),CONST(s("1-",p(8))),LVAR(2,0),LIST(2),LIST(3),FGVAR(s(73)),CALL(2),POP(),UNFR(2,0),LVAR(0,1),RET()],s(117)),PRIM(s(76),2),POP()
,CONST(s("PARSE-FOR-BEING-SYMBOLS",p(63))),FN([ARGS(2),CONST("index"),PRIM(s(105),1),CONST("length"),PRIM(s(105),1),CONST("symbols"),PRIM(s(105),1),NIL(),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LET(5),SAVE(23),LVAR(0,4),CONST(l(s(46),s(47))),FGVAR(s(101)),CALL(2),FJUMP(29),CONST(s("%INTERNED-SYMBOLS",p(8))),LIST(1),LSET(0,3),POP(),JUMP(50),SAVE(34),LVAR(0,4),CONST(l(s(48),s(49))),FGVAR(s(101)),CALL(2),FJUMP(40),CONST(s("%ACCESSIBLE-SYMBOLS",p(8))),LIST(1),LSET(0,3),POP(),JUMP(50),SAVE(45),LVAR(0,4),CONST(l(s(50),s(51))),FGVAR(s(101)),CALL(2),FJUMP(50),CONST(s("%EXTERNAL-SYMBOLS",p(8))),LIST(1),LSET(0,3),POP(),LVAR(1,1),LET(1),LVAR(0,0),CDR(),LSET(2,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,4),POP(),SAVE(71),SAVE(67),LVAR(0,4),CONST(l(s(3),s(40))),FGVAR(s(101)),CALL(2),CONST("Bad LOOP for-being syntax: ~A"),LVAR(0,4),FGVAR(s(119)),CALL(3),POP(),CONST(s("FIND-PACKAGE",p(8))),LVAR(1,1),LET(1),LVAR(0,0),CDR(),LSET(2,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(2),LVAR(0,3),CONS(),LSET(0,3),POP(),SAVE(98),GVAR(s(68)),LVAR(0,0),CONST(0),LIST(2),LVAR(0,1),LVAR(0,2),LVAR(1,0),LIST(4),FGVAR(s(77)),CALL(2),POP(),SAVE(115),GVAR(s(69)),CONST(s(96)),LVAR(0,2),LVAR(0,3),PRIM(s("NREVERSE",p(8)),1),LIST(3),CONST(s(96)),LVAR(0,1),CONST(s(113)),LVAR(0,2),LIST(2),LIST(3),LIST(2),FGVAR(s(77)),CALL(2),POP(),SAVE(140),GVAR(s(67)),CONST(s(12)),CONST(s(112)),LVAR(0,0),LVAR(0,1),LIST(3),CONST(s(106)),CONST(s(107)),LIST(2),LIST(3),CONST(s(96)),LVAR(1,0),CONST(s(114)),LVAR(0,2),LVAR(0,0),LIST(3),LIST(3),CONST(s(115)),LVAR(0,0),LIST(2),LIST(3),FGVAR(s(77)),CALL(2),POP(),UNFR(1,0),LVAR(0,1),RET()],s(127)),PRIM(s(76),2),POP()
,CONST(s("PARSE-FOR-BEING",p(63))),FN([ARGS(2),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LET(1),SAVE(21),SAVE(17),LVAR(0,0),CONST(l(s(38),s(39))),FGVAR(s(101)),CALL(2),CONST("Bad LOOP for-being syntax: ~A"),LVAR(0,0),FGVAR(s(119)),CALL(3),POP(),SAVE(28),LVAR(1,1),CAR(),CONST(l(s(46),s(47),s(48),s(49),s(50),s(51))),FGVAR(s(101)),CALL(2),FJUMP(35),SAVE(299),LVAR(1,0),LVAR(1,1),FGVAR(s(127)),CALL(2),RET(),CONST("hash-iterator"),PRIM(s(105),1),CONST("hash-current"),PRIM(s(105),1),NIL(),NIL(),NIL(),LET(5),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(1,0),POP(),SAVE(59),LVAR(1,0),CONST(l(s(44),s(45))),FGVAR(s(101)),CALL(2),FJUMP(71),LVAR(0,4),FJUMP(67),SAVE(66),CONST("LOOP for-being value variable already defined"),FGVAR(s(118)),CALL(1),POP(),LVAR(2,0),LSET(0,4),POP(),JUMP(94),SAVE(76),LVAR(1,0),CONST(l(s(42),s(43))),FGVAR(s(101)),CALL(2),FJUMP(88),LVAR(0,3),FJUMP(84),SAVE(83),CONST("LOOP for-being key variable already defined"),FGVAR(s(118)),CALL(1),POP(),LVAR(2,0),LSET(0,3),POP(),JUMP(94),SAVE(93),CONST("Bad LOOP for-being syntax: ~A"),LVAR(1,0),FGVAR(s(118)),CALL(2),POP(),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(1,0),POP(),SAVE(115),SAVE(111),LVAR(1,0),CONST(l(s(3),s(40))),FGVAR(s(101)),CALL(2),CONST("Bad LOOP for-being syntax: ~A"),LVAR(1,0),FGVAR(s(119)),CALL(3),POP(),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(0,2),POP(),SAVE(133),LVAR(2,1),CAR(),CONST(s(41)),FGVAR(s(101)),CALL(2),FJUMP(210),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(2,1),LET(1),LVAR(0,0),CDR(),LSET(3,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),FRAME(),VAR(),LVAR(0,0),CADR(),VAR(),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),LSET(2,0),POP(),SAVE(174),LVAR(2,0),CONST(l(s(44),s(45))),FGVAR(s(101)),CALL(2),FJUMP(186),LVAR(1,4),FJUMP(182),SAVE(181),CONST("LOOP for-being value variable already defined"),FGVAR(s(118)),CALL(1),POP(),LVAR(0,1),LSET(1,4),POP(),JUMP(209),SAVE(191),LVAR(2,0),CONST(l(s(42),s(43))),FGVAR(s(101)),CALL(2),FJUMP(203),LVAR(1,3),FJUMP(199),SAVE(198),CONST("LOOP for-being key variable already defined"),FGVAR(s(118)),CALL(1),POP(),LVAR(0,1),LSET(1,3),POP(),JUMP(209),SAVE(208),CONST("Bad LOOP for-being syntax: ~A"),LVAR(2,0),FGVAR(s(118)),CALL(2),POP(),UNFR(1,0),SAVE(217),GVAR(s(68)),LVAR(0,0),LVAR(0,1),LIST(2),FGVAR(s(77)),CALL(2),POP(),LVAR(0,3),FJUMP(226),SAVE(225),GVAR(s(68)),LVAR(0,3),FGVAR(s(73)),CALL(2),POP(),LVAR(0,4),FJUMP(234),SAVE(233),GVAR(s(68)),LVAR(0,4),FGVAR(s(73)),CALL(2),POP(),SAVE(244),GVAR(s(69)),CONST(s(96)),LVAR(0,0),CONST(s("HASH-ITERATOR",p(8))),LVAR(0,2),LIST(2),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(264),GVAR(s(67)),CONST(s(96)),LVAR(0,1),CONST(s("ITERATOR-NEXT",p(8))),LVAR(0,0),LIST(2),LIST(3),CONST(s(12)),CONST(s(100)),LVAR(0,1),LIST(2),CONST(s(106)),CONST(s(107)),LIST(2),LIST(3),LIST(2),FGVAR(s(77)),CALL(2),POP(),LVAR(0,3),FJUMP(281),SAVE(280),GVAR(s(67)),CONST(s(96)),LVAR(0,3),CONST(s(114)),CONST(s(99)),LVAR(0,1),LIST(2),CONST(0),LIST(3),LIST(3),FGVAR(s(73)),CALL(2),POP(),LVAR(0,4),FJUMP(297),SAVE(296),GVAR(s(67)),CONST(s(96)),LVAR(0,4),CONST(s(114)),CONST(s(99)),LVAR(0,1),LIST(2),CONST(1),LIST(3),LIST(3),FGVAR(s(73)),CALL(2),POP(),UNFR(1,0),LVAR(1,1),RET()],s(133)),PRIM(s(76),2),POP()
,FRAME(),FN([ARG_(1),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),LET(1),SAVE(16),LVAR(0,0),CONST(l(s(3),s(4))),FGVAR(s(101)),CALL(2),FJUMP(24),SAVE(79),LVAR(0,0),LVAR(1,0),LVAR(1,1),FGVAR(s(104)),CALL(3),RET(),SAVE(29),LVAR(0,0),CONST(s("=",p(8))),FGVAR(s(101)),CALL(2),FJUMP(36),SAVE(79),LVAR(1,0),LVAR(1,1),FGVAR(s(116)),CALL(2),JUMP(79),SAVE(41),LVAR(0,0),CONST(s(6)),FGVAR(s(101)),CALL(2),FJUMP(48),SAVE(79),LVAR(1,0),LVAR(1,1),FGVAR(s(111)),CALL(2),JUMP(79),SAVE(53),LVAR(0,0),CONST(l(s(34),s(36),s(35),s(52),s(54),s(55))),FGVAR(s(101)),CALL(2),FJUMP(62),SAVE(79),LVAR(1,0),LVAR(0,0),LVAR(1,1),CONS(),FGVAR(s(117)),CALL(2),JUMP(79),SAVE(67),LVAR(0,0),CONST(s(37)),FGVAR(s(101)),CALL(2),FJUMP(74),SAVE(79),LVAR(1,0),LVAR(1,1),FGVAR(s(133)),CALL(2),JUMP(79),SAVE(79),CONST("Unknown token in LOOP FOR: ~A"),LVAR(0,0),FGVAR(s(118)),CALL(2),RET()],s(90)),VAR(),SAVE(168),CONST(l(s(14),s(2))),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),CONST("repeat"),PRIM(s(105),1),LET(1),SAVE(9),GVAR(s(68)),LVAR(0,0),FGVAR(s(73)),CALL(2),POP(),SAVE(26),GVAR(s(69)),CONST(s(96)),LVAR(0,0),LVAR(1,0),LET(1),LVAR(0,0),CDR(),LSET(2,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(42),GVAR(s(67)),CONST(s(12)),CONST(s(122)),CONST(s("DECF",p(0))),LVAR(0,0),LIST(2),CONST(0),LIST(3),CONST(s(106)),CONST(s(107)),LIST(2),LIST(3),FGVAR(s(73)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(90)),VAR(),SAVE(178),CONST(s(11)),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),FJUMP(16),LVAR(1,0),CAR(),PRIM(s(80),1),LET(1),LVAR(0,0),FJUMP(13),LVAR(0,0),JUMP(14),NIL(),UNFR(1,0),JUMP(17),NIL(),UNFR(1,0),FJUMP(31),SAVE(25),GVAR(s(67)),LVAR(0,0),CAR(),FGVAR(s(73)),CALL(2),POP(),LVAR(1,0),LVAR(0,0),CDR(),PRIM(s("APPLY",p(8)),2),RET(),LVAR(0,0),RET()],s(90)),VAR(),SAVE(188),CONST(s(15)),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),CAR(),GSET(s(72)),POP(),LVAR(0,0),CDR(),RET()],s(90)),VAR(),SAVE(198),CONST(s(7)),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),FJUMP(16),LVAR(1,0),CAR(),PRIM(s(80),1),LET(1),LVAR(0,0),FJUMP(13),LVAR(0,0),JUMP(14),NIL(),UNFR(1,0),JUMP(17),NIL(),UNFR(1,0),FJUMP(31),SAVE(25),GVAR(s(71)),LVAR(0,0),CAR(),FGVAR(s(73)),CALL(2),POP(),LVAR(1,0),LVAR(0,0),CDR(),PRIM(s(138),2),RET(),LVAR(0,0),RET()],s(90)),VAR(),SAVE(208),CONST(s(31)),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,0),CAR(),CONST(s(136)),FGVAR(s(101)),CALL(2),FJUMP(37),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(38),NIL(),LET(2),LVAR(0,0),PRIM(s(81),1),FJUMP(58),SAVE(47),GVAR(s(68)),LVAR(0,0),FGVAR(s(73)),CALL(2),POP(),SAVE(56),GVAR(s(69)),CONST(s(96)),LVAR(0,0),LVAR(0,1),LIST(3),FGVAR(s(73)),CALL(2),POP(),JUMP(68),SAVE(67),GVAR(s(69)),SAVE(65),LVAR(0,0),LVAR(0,1),FGVAR(s(94)),CALL(2),FGVAR(s(77)),CALL(2),POP(),SAVE(74),LVAR(1,0),CAR(),CONST(s(29)),FGVAR(s(101)),CALL(2),FJUMP(80),LVAR(2,0),LVAR(1,0),CDR(),PRIM(s(138),2),RET(),LVAR(1,0),RET()],s(90)),VAR(),SAVE(218),CONST(s(28)),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,CONST(s("MAYBE-INTO",p(63))),FN([ARG_(0),LVAR(0,0),FRAME(),VAR(),LVAR(0,0),FJUMP(16),LVAR(0,0),CAR(),LET(1),LVAR(1,0),CDR(),LSET(1,0),POP(),LVAR(0,0),UNFR(1,0),JUMP(20),SAVE(20),CONST(s("NAME",p(8))),FGVAR(s(87)),CALL(1),VAR(),CONST(s("IF",p(8))),CONST(s(101)),CONST(s(99)),CONST(s(88)),LIST(2),CONST(s(91)),CONST(s(30)),LIST(2),LIST(3),CONST(s("PROGN",p(8))),CONST(s("POP",p(0))),CONST(s(88)),LIST(2),CONST(s(143)),CONST(s(88)),LIST(2),LIST(3),CONST(s(105)),LVAR(0,1),LIST(2),LIST(4),RET()],l(s(91),s(139))),PRIM(s(93),2),POP()
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,0),CAR(),CONST(s(30)),FGVAR(s(101)),CALL(2),FJUMP(37),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(39),CONST("collect"),PRIM(s(105),1),CONST("tail"),PRIM(s(105),1),LET(3),SAVE(49),GVAR(s(68)),LVAR(0,1),LVAR(0,2),LIST(2),FGVAR(s(77)),CALL(2),POP(),SAVE(79),GVAR(s(67)),CONST(s(97)),CONST(s("CELL",p(8))),CONST(s("CONS",p(8))),LVAR(0,0),NIL(),LIST(3),LIST(2),LIST(1),CONST(s(96)),LVAR(0,2),CONST(s(141)),LVAR(0,2),CONST(s(96)),CONST(s(100)),LVAR(0,2),LIST(2),CONST(s(144)),LIST(3),CONST(s(96)),LVAR(0,1),CONST(s(144)),LIST(3),LIST(4),LIST(3),LIST(3),FGVAR(s(73)),CALL(2),POP(),LVAR(0,1),PRIM(s("SYMBOL-PACKAGE",p(8)),1),TJUMP(89),SAVE(88),GVAR(s(71)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(90)),VAR(),SAVE(232),CONST(l(s(16),s(17))),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,CONST(s("%LOOP-MAKE-LIST",p(63))),FN([ARGS(2),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,1),CAR(),CONST(s(30)),FGVAR(s(101)),CALL(2),FJUMP(37),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,1),LET(1),LVAR(0,0),CDR(),LSET(1,1),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(43),LVAR(0,0),FJUMP(41),CONST("append"),JUMP(42),CONST("nconc"),PRIM(s(105),1),LVAR(0,0),FJUMP(47),NIL(),JUMP(49),CONST("tail"),PRIM(s(105),1),LET(3),SAVE(55),GVAR(s(68)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),LVAR(0,2),FJUMP(64),SAVE(63),GVAR(s(68)),LVAR(0,2),FGVAR(s(73)),CALL(2),POP(),SAVE(106),GVAR(s(67)),LVAR(1,0),FJUMP(76),CONST(s(96)),LVAR(0,1),CONST(s(18)),LVAR(0,1),LVAR(0,0),LIST(3),LIST(3),JUMP(104),CONST(s(97)),CONST(s("LS",p(63))),LVAR(0,0),LIST(2),LIST(1),CONST(s(12)),CONST(s(148)),CONST(s(141)),LVAR(0,2),CONST(s(96)),CONST(s(100)),LVAR(0,2),LIST(2),CONST(s(148)),LIST(3),CONST(s(96)),LVAR(0,1),CONST(s(148)),LIST(3),LIST(4),CONST(s(96)),LVAR(0,2),CONST(s(78)),CONST(s(148)),LIST(2),LIST(3),LIST(4),LIST(3),FGVAR(s(73)),CALL(2),POP(),LVAR(0,1),PRIM(s(146),1),TJUMP(116),SAVE(115),GVAR(s(71)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),UNFR(1,0),LVAR(0,1),RET()],s(147)),PRIM(s(76),2),POP()
,FRAME(),FN([ARG_(0),T(),LVAR(0,0),FGVAR(s(147)),CALL(2)],s(90)),VAR(),SAVE(246),CONST(l(s(18),s(19))),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),NIL(),LVAR(0,0),FGVAR(s(147)),CALL(2)],s(90)),VAR(),SAVE(256),CONST(l(s(20),s(21))),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,0),CAR(),CONST(s(30)),FGVAR(s(101)),CALL(2),FJUMP(37),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(39),CONST("sum"),PRIM(s(105),1),LET(2),SAVE(45),GVAR(s(68)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),SAVE(54),GVAR(s(69)),CONST(s(96)),LVAR(0,1),CONST(0),LIST(3),FGVAR(s(73)),CALL(2),POP(),SAVE(66),GVAR(s(67)),CONST(s(96)),LVAR(0,1),CONST(s(123)),LVAR(0,1),LVAR(0,0),LIST(3),LIST(3),FGVAR(s(73)),CALL(2),POP(),LVAR(0,1),PRIM(s(146),1),TJUMP(76),SAVE(75),GVAR(s(71)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(90)),VAR(),SAVE(266),CONST(l(s(22),s(23))),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,0),CAR(),CONST(s(30)),FGVAR(s(101)),CALL(2),FJUMP(37),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,0),LET(1),LVAR(0,0),CDR(),LSET(1,0),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(39),CONST("count"),PRIM(s(105),1),LET(2),SAVE(47),GVAR(s(68)),LVAR(0,1),CONST(0),LIST(2),FGVAR(s(73)),CALL(2),POP(),SAVE(58),GVAR(s(67)),CONST(s(12)),LVAR(0,0),CONST(s(115)),LVAR(0,1),LIST(2),LIST(3),FGVAR(s(73)),CALL(2),POP(),LVAR(0,1),PRIM(s(146),1),TJUMP(68),SAVE(67),GVAR(s(71)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),UNFR(1,0),LVAR(0,0),RET()],s(90)),VAR(),SAVE(276),CONST(l(s(32),s(33))),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,CONST(s("EXTREMIZING",p(63))),FN([ARGS(3),LVAR(0,2),LET(1),LVAR(0,0),CDR(),LSET(1,2),POP(),LVAR(0,0),CAR(),UNFR(1,0),SAVE(16),LVAR(0,2),CAR(),CONST(s(30)),FGVAR(s(101)),CALL(2),FJUMP(37),LVAR(0,2),LET(1),LVAR(0,0),CDR(),LSET(1,2),POP(),LVAR(0,0),CAR(),POP(),UNFR(1,0),LVAR(0,2),LET(1),LVAR(0,0),CDR(),LSET(1,2),POP(),LVAR(0,0),CAR(),UNFR(1,0),JUMP(39),LVAR(0,0),PRIM(s(105),1),LET(2),SAVE(45),GVAR(s(68)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),SAVE(71),GVAR(s(67)),CONST(s(97)),CONST(s("VAL",p(8))),LVAR(0,0),LIST(2),LIST(1),CONST(s(141)),CONST(s("OR",p(8))),CONST(s("NOT",p(8))),LVAR(0,1),LIST(2),LVAR(1,1),CONST(s(150)),LVAR(0,1),LIST(3),LIST(3),CONST(s(96)),LVAR(0,1),CONST(s(150)),LIST(3),LIST(3),LIST(3),FGVAR(s(73)),CALL(2),POP(),LVAR(0,1),PRIM(s(146),1),TJUMP(81),SAVE(80),GVAR(s(71)),LVAR(0,1),FGVAR(s(73)),CALL(2),POP(),UNFR(1,0),LVAR(0,2),RET()],s(149)),PRIM(s(76),2),POP()
,FRAME(),FN([ARG_(0),CONST("max"),CONST(s(120)),LVAR(0,0),FGVAR(s(149)),CALL(3)],s(90)),VAR(),SAVE(290),CONST(l(s(24),s(25))),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,FRAME(),FN([ARG_(0),CONST("min"),CONST(s(122)),LVAR(0,0),FGVAR(s(149)),CALL(3)],s(90)),VAR(),SAVE(300),CONST(l(s(26),s(27))),LVAR(0,0),FGVAR(s(79)),CALL(2),POP(),UNFR(1,0)
,CONST(s("PARSE-CLAUSE",p(63))),FN([ARGS(1),LVAR(0,0),CAR(),LET(1),LVAR(0,0),PRIM(s(81),1),TJUMP(13),SAVE(12),CONST("Expecting loop clause, got ~A"),LVAR(0,0),FGVAR(s(118)),CALL(2),POP(),GVAR(s(64)),LVAR(0,0),PRIM(s("HASH-GET",p(8)),2),LET(1),LVAR(0,0),TJUMP(25),SAVE(24),CONST("Unknown loop clause ~A"),LVAR(1,0),FGVAR(s(118)),CALL(2),POP(),LVAR(0,0),LVAR(2,0),CDR(),PRIM(s(138),2),RET()],s(153)),PRIM(s(76),2),POP()
,CONST(s("EXPAND-LOOP",p(63))),FN([ARGS(1),NIL(),LIST(1),NIL(),LIST(1),NIL(),LIST(1),NIL(),LIST(1),NIL(),LIST(1),NIL(),LET(6),BIND(s(67),0),BIND(s(68),1),BIND(s(69),2),BIND(s(70),3),BIND(s(71),4),BIND(s(72),5),FRAME(),FN([ARGS(1),LVAR(0,0),FJUMP(9),SAVE(7),LVAR(0,0),FGVAR(s(153)),CALL(1),LVAR(1,0),CALL(1),NIL(),RET()],s("REC",p(8))),VAR(),SAVE(26),LVAR(2,0),LVAR(0,0),CALL(1),POP(),UNFR(1,0),CONST(s("BLOCK",p(8))),GVAR(s(72)),CONST(s(97)),GVAR(s(68)),CAR(),CONST(s("TAGBODY",p(8))),GVAR(s(69)),CAR(),CONST(s("%LOOP-NEXT",p(63))),GVAR(s(67)),CAR(),GVAR(s(70)),CAR(),CONST(s(106)),CONST(s(159)),LIST(2),CONST(s(107)),LIST(2),PRIM(s(18),3),CONS(),PRIM(s(18),2),CONS(),GVAR(s(71)),CAR(),LIST_(4),LIST(3),RET()],s(155)),PRIM(s(76),2),POP()
,CONST(s(1)),FN([ARG_(0),LVAR(0,0),FRAME(),VAR(),LVAR(0,0),VAR(),LVAR(0,1),CAR(),PRIM(s(81),1),FJUMP(15),SAVE(27),LVAR(0,1),FGVAR(s(155)),CALL(1),RET(),CONST(s(157)),NIL(),CONST(s(97)),CONST(s(159)),NIL(),LVAR(0,1),CONST(s(159)),LIST(1),LIST(1),PRIM(s(18),2),LIST_(4),LIST(3),RET()],l(s(91),s(1))),PRIM(s(93),2),POP()
,CONST("lisp/loop.lisp"),CONST([[s(64),"DEFPARAMETER",1285],[s(67),"DEFPARAMETER",1329],[s(68),"DEFPARAMETER",1371],[s(69),"DEFPARAMETER",1418],[s(70),"DEFPARAMETER",1461],[s(71),"DEFPARAMETER",1506],[s(72),"DEFPARAMETER",1550],[s(73),"DEFUN",1588],[s(77),"DEFUN",1759],[s(79),"DEFUN",1913],[s(86),"DEFMACRO",2370],[s(94),"DEFUN",2495],[s(101),"DEFUN",2963],[s(104),"DEFUN",3239],[s(111),"DEFUN",3991],[s(116),"DEFUN",4474],[s(117),"DEFUN",4675],[s(127),"DEFUN",6501],[s(133),"DEFUN",7625],[s(139),"DEFMACRO",11637],[s(147),"DEFUN",12264],[s(149),"DEFUN",13677],[s(153),"DEFUN",14237],[s(155),"DEFUN",14522],[s(1),"DEFMACRO",15151]]),PRIM(s("%GROK-XREF-INFO",p(8)),2),POP()
